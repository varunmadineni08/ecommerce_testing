{"name": "test_cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\n  (Session info: MicrosoftEdge=137.0.3296.93)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7fd573985+25605]\n\t(No symbol) [0x0x7ff7fd4c3a90]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff7fd7f6fca+1962554]\n\t(No symbol) [0x0x7ff7fd289110]\n\t(No symbol) [0x0x7ff7fd27d3af]\n\t(No symbol) [0x0x7ff7fd27ea26]\n\t(No symbol) [0x0x7ff7fd27d619]\n\t(No symbol) [0x0x7ff7fd27d21c]\n\t(No symbol) [0x0x7ff7fd27cf68]\n\t(No symbol) [0x0x7ff7fd27af5b]\n\t(No symbol) [0x0x7ff7fd27b53c]\n\t(No symbol) [0x0x7ff7fd28f6ba]\n\t(No symbol) [0x0x7ff7fd317b6e]\n\t(No symbol) [0x0x7ff7fd2f9e4a]\n\t(No symbol) [0x0x7ff7fd2cea5d]\n\t(No symbol) [0x0x7ff7fd3175df]\n\t(No symbol) [0x0x7ff7fd2f9bb3]\n\t(No symbol) [0x0x7ff7fd2cdf56]\n\t(No symbol) [0x0x7ff7fd2cd463]\n\t(No symbol) [0x0x7ff7fd2cdd83]\n\t(No symbol) [0x0x7ff7fd3ce0fd]\n\t(No symbol) [0x0x7ff7fd3ddd08]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff7fd658959+265161]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff7fd660261+296145]\n\t(No symbol) [0x0x7ff7fd4d2231]\n\t(No symbol) [0x0x7ff7fd4ca6d4]\n\t(No symbol) [0x0x7ff7fd4ca823]\n\t(No symbol) [0x0x7ff7fd4bb9f6]\n\tBaseThreadInitThunk [0x0x7ffc0551e8d7+23]\n\tRtlUserThreadStart [0x0x7ffc06d9c34c+44]", "trace": "request = <SubRequest 'setup' for <Function test_cart>>\n\n    @pytest.fixture()\n    def setup(request):\n        driver=None\n        browser=Readconfigs.read_config(\"info\",\"browser\")\n        if browser == \"chrome\":\n            driver = webdriver.Chrome()\n        elif browser == \"edge\":\n            driver=webdriver.Edge()\n        elif browser == \"firefox\":\n            driver=webdriver.Firefox()\n        else:\n            raise Exception(f\"enter valid browser\")\n    \n        url=Readconfigs.read_config(\"info\",\"url\")\n>       driver.get(url)\n\ntests\\conftest.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\PytestAutomation\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in get\n    self.execute(Command.GET, {\"url\": url})\n..\\PytestAutomation\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001B781EAC770>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_INTERNET_DISCONNECTED\\\\...[0x0x7ff7fd4bb9f6]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffc0551e8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ffc06d9c34c+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\nE         (Session info: MicrosoftEdge=137.0.3296.93)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7fd573985+25605]\nE       \t(No symbol) [0x0x7ff7fd4c3a90]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff7fd7f6fca+1962554]\nE       \t(No symbol) [0x0x7ff7fd289110]\nE       \t(No symbol) [0x0x7ff7fd27d3af]\nE       \t(No symbol) [0x0x7ff7fd27ea26]\nE       \t(No symbol) [0x0x7ff7fd27d619]\nE       \t(No symbol) [0x0x7ff7fd27d21c]\nE       \t(No symbol) [0x0x7ff7fd27cf68]\nE       \t(No symbol) [0x0x7ff7fd27af5b]\nE       \t(No symbol) [0x0x7ff7fd27b53c]\nE       \t(No symbol) [0x0x7ff7fd28f6ba]\nE       \t(No symbol) [0x0x7ff7fd317b6e]\nE       \t(No symbol) [0x0x7ff7fd2f9e4a]\nE       \t(No symbol) [0x0x7ff7fd2cea5d]\nE       \t(No symbol) [0x0x7ff7fd3175df]\nE       \t(No symbol) [0x0x7ff7fd2f9bb3]\nE       \t(No symbol) [0x0x7ff7fd2cdf56]\nE       \t(No symbol) [0x0x7ff7fd2cd463]\nE       \t(No symbol) [0x0x7ff7fd2cdd83]\nE       \t(No symbol) [0x0x7ff7fd3ce0fd]\nE       \t(No symbol) [0x0x7ff7fd3ddd08]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff7fd658959+265161]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff7fd660261+296145]\nE       \t(No symbol) [0x0x7ff7fd4d2231]\nE       \t(No symbol) [0x0x7ff7fd4ca6d4]\nE       \t(No symbol) [0x0x7ff7fd4ca823]\nE       \t(No symbol) [0x0x7ff7fd4bb9f6]\nE       \tBaseThreadInitThunk [0x0x7ffc0551e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffc06d9c34c+44]\n\n..\\PytestAutomation\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException"}, "start": 1750826568305, "stop": 1750826568305, "uuid": "6e56a261-5ef3-4774-9e26-9e7fdf5402ca", "historyId": "f3f1e158e2e0035624c735bbdb095a97", "testCaseId": "f3f1e158e2e0035624c735bbdb095a97", "fullName": "tests.test_cart.TestCart#test_cart", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_cart"}, {"name": "subSuite", "value": "TestCart"}, {"name": "host", "value": "varun"}, {"name": "thread", "value": "7816-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cart"}]}